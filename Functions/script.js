// ...args
{
    function sumAll(...args) { // args — имя массива
        let sum = 0;

        for (let arg of args) sum += arg;

        return sum;
    }

    console.log( sumAll(1) ); // 1
    console.log( sumAll(1, 2) ); // 3
    console.log( sumAll(1, 2, 3) ); // 6
}
// Переменная "arguments"
{
    /*
    Хотя arguments похож на массив, и его тоже можно перебирать, это всё же не массив.
    Он не поддерживает методы массивов, поэтому мы не можем, например, вызвать arguments.map(...).

    Стрелочные функции не имеют "arguments"
    Если мы обратимся к arguments из стрелочной функции, то получим аргументы внешней «нормальной» функции.
    Как мы помним, у стрелочных функций нет собственного this.
     */
    function showName() {
        console.log( arguments.length );
        console.log( arguments[0] );
        console.log( arguments[1] );

        // Объект arguments можно перебирать
        // for (let arg of arguments) alert(arg);
    }

    // Вывод: 2, Юлий, Цезарь
    showName("Юлий", "Цезарь");

    // Вывод: 1, Илья, undefined (второго аргумента нет)
    showName("Илья");

    function f() {
        let showArg = () => console.log(arguments[0]);
        showArg(2);
    }

    f(1); // 1
}
// Оператор расширения
{
    let arr = [3, 5, 1];

    console.log( Math.max(arr) ); // NaN
    // Math.max ожидает получить список чисел, а не один массив
    // Когда ...arr используется при вызове функции, он «расширяет» перебираемый объект arr в список аргументов.

    let arr1 = [3, 5, 1];

    console.log( Math.max(...arr1) ); // 5 (оператор "раскрывает" массив в список аргументов)

    let arr2 = [1, -2, 3, 4];
    let arr3 = [8, 3, -8, 1];

    console.log( Math.max(...arr2, ...arr3) ); // 8
}
{
    // Оператор расширения можно использовать и для слияния массивов:
    let arr = [3, 5, 1];
    let arr2 = [8, 9, 15];

    let merged = [0, ...arr, 2, ...arr2];

    console.log(merged); // 0,3,5,1,2,8,9,15 (0, затем arr, затем 2, в конце arr2)

    // оператор расширения подойдёт для того, чтобы превратить строку в массив символов:
    let str = "Привет";

    console.log( [...str] ); // П,р,и,в,е,т
    /*
    Результат аналогичен [...str].

    Но между Array.from(obj) и [...obj] есть разница:

    Array.from работает как с псевдомассивами, так и с итерируемыми объектами
    Оператор расширения работает только с итерируемыми объектами
    Выходит, что если нужно сделать из чего угодно массив, то Array.from — более универсальный метод.
     */
}